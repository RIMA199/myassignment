Book Recommendation system (collaborative filtering)
#import packeges
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
book= pd.read_csv(r"F:\New folder\1938_3914_compressed_books.csv\books.csv")
rattings=pd.read_csv(r"F:\New folder\1938_3914_compressed_ratings.csv\ratings.csv")

book.head()

rattings.head()

book.info()

rattings.info()

print(rattings.shape)
print(list(rattings.columns))

print(book.shape)
print(list(book.columns))

book['original_title'].isnull().sum()

book['book_id'].isnull().sum()

rattings.apply(lambda x: x.isnull().sum(),axis=0)

book.apply(lambda x:x.isnull().sum(), axis=0)

book['title']

books_dataset = pd.DataFrame(book, columns=['book_id', 'authors', 'title', 'average_rating'])

books_dataset = books_dataset.sort_values('book_id')

books_dataset['book_id']

plt.rc("font", size=15)
rattings.rating.value_counts(sort=False).plot(kind='bar')
plt.title('Ratting Distribution\n')
plt.xlabel('Rating')
plt.ylabel('Count')
plt.savefig('system1.png', bbox_inches='tight')
plt.show()

# merging both the datafile

books_data = pd.merge(books_dataset, rattings, on='book_id')

books_data.head()

# get rating of every user for every book



each_book_rating = pd.pivot_table(books_data, index='user_id', values='rating', columns='title', fill_value=0)

each_book_rating

book_corr = np.corrcoef(each_book_rating.T)

book_corr .shape

book_list=  list(each_book_rating)
book_titles =[] 
for i in range(len(book_list)):
    book_titles.append(book_list[i])

# get sorted list of book for correlation indexing

book_list

# test for input

book = 'The Alchemist'
book_index = book_titles.index(book)

corr_score = book_corr[book_index]

print(sorted(corr_score, reverse=True))

# function to get recommendation for a list of books

def get_recommendation(books_list):
    book_similarities = np.zeros(book_corr.shape[0])
    
    for book in books_list:    
#         print(book)
        book_index = book_titles.index(book)
#         print(book_index)
        book_similarities += book_corr[book_index] 
    book_preferences = []
    for i in range(len(book_titles)):
        book_preferences.append((book_titles[i],book_similarities[i]))
        
    return sorted(book_preferences, key= lambda x: x[1], reverse=True)
    

my_fav_books = ['The Alchemist','The Adventures of Sherlock Holmes','The Great Gatsby','To Kill a Mockingbird','The Da Vinci Code (Robert Langdon, #2)','The Fellowship of the Ring (The Lord of the Rings, #1)']


book_recommendations = get_recommendation(my_fav_books)

print('The books you should like')
print('-'*25)
i=0
cnt=0
while cnt < 9:
    book_to_read = book_recommendations[i][0]
    i += 1
    if book_to_read in my_fav_books:
        continue
    else:
        print(book_to_read)
        cnt += 1
    



